import { OptionalDeep } from 'Object/Optional'
import {O} from 'ts-toolbelt'

type merge = O.Assign<
	{ obj: string, num: number, nested: { values: number[] } },
	[{ obj: Record<string, any> }]
>

interface MyObject { someVal: string }
interface MyType { array?: MyObject[] }

const defaults: MyType = {
	array: []
}

type Merged = O.Assign<typeof defaults, [OptionalDeep<MyType>], "deep">


interface GoogleStudent {
	googleUserId: string
}
interface Test {
	googleStudents?: GoogleStudent[]
}

type N = O.Assign<Test, [O.Partial<Test, "deep">], "deep">

