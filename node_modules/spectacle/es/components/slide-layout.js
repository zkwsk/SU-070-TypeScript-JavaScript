var _excluded = ["children"],
    _excluded2 = ["children"],
    _excluded3 = ["left", "right"],
    _excluded4 = ["title", "items", "listType", "animateListItems", "titleProps", "listProps"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import Slide from './slide/slide';
import { Box, FlexBox } from './layout-primitives';
import { Fragment } from 'react';
import { Heading, ListItem, OrderedList, UnorderedList } from './typography';
import { Appear } from './appear';
/**
 * Full-slide layout
 */

import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";

var Full = function Full(_ref) {
  var children = _ref.children,
      rest = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/_jsx(Slide, _objectSpread(_objectSpread({}, rest), {}, {
    children: children
  }));
};
/**
 * Centered layout
 */


var Center = function Center(_ref2) {
  var children = _ref2.children,
      rest = _objectWithoutProperties(_ref2, _excluded2);

  return /*#__PURE__*/_jsx(Slide, _objectSpread(_objectSpread({}, rest), {}, {
    children: /*#__PURE__*/_jsx(FlexBox, {
      justifyContent: "center",
      alignItems: "center",
      height: "100%",
      children: /*#__PURE__*/_jsx(Box, {
        children: children
      })
    })
  }));
};
/**
 * Two-column layout
 */


var TwoColumn = function TwoColumn(_ref3) {
  var left = _ref3.left,
      right = _ref3.right,
      rest = _objectWithoutProperties(_ref3, _excluded3);

  return /*#__PURE__*/_jsx(Slide, _objectSpread(_objectSpread({}, rest), {}, {
    children: /*#__PURE__*/_jsxs(FlexBox, {
      flexDirection: "row",
      alignItems: "start",
      flex: 1,
      children: [/*#__PURE__*/_jsx(Box, {
        width: "100%",
        children: left
      }), /*#__PURE__*/_jsx(Box, {
        width: "100%",
        children: right
      })]
    })
  }));
};
/**
 * List layout with optional title
 */


var List = function List(_ref4) {
  var title = _ref4.title,
      items = _ref4.items,
      _ref4$listType = _ref4.listType,
      listType = _ref4$listType === void 0 ? 'unordered' : _ref4$listType,
      _ref4$animateListItem = _ref4.animateListItems,
      animateListItems = _ref4$animateListItem === void 0 ? false : _ref4$animateListItem,
      titleProps = _ref4.titleProps,
      listProps = _ref4.listProps,
      rest = _objectWithoutProperties(_ref4, _excluded4);

  var List = listType === 'unordered' ? UnorderedList : OrderedList;
  return /*#__PURE__*/_jsxs(Slide, _objectSpread(_objectSpread({}, rest), {}, {
    children: [title ? /*#__PURE__*/_jsx(Heading, _objectSpread(_objectSpread({
      textAlign: "left"
    }, titleProps), {}, {
      children: title
    })) : null, /*#__PURE__*/_jsx(List, _objectSpread(_objectSpread({}, listProps), {}, {
      children: items.map(function (item, i) {
        var Wrapper = animateListItems ? Appear : Fragment;
        return /*#__PURE__*/_jsx(Wrapper, {
          children: /*#__PURE__*/_jsx(ListItem, {
            children: item
          }, i)
        }, i);
      })
    }))]
  }));
};
/**
 * Layouts to consider:
 * - Image (left, right, full bleed?)
 * - Intro
 * - Quote
 * - Section
 * - Statement?
 * - Big fact?
 */


export default {
  Full: Full,
  Center: Center,
  TwoColumn: TwoColumn,
  List: List
};