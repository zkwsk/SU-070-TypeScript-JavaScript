var _templateObject, _templateObject2, _templateObject3, _templateObject4;

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import styled from 'styled-components';
import { KBarResults, useMatches } from 'kbar';
import { prettifyShortcut } from '../../../utils/platform-keys';
import { KEYBOARD_SHORTCUTS, SYSTEM_FONT } from '../../../utils/constants';
import { Text } from '../../typography';
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";

function getShortcutKeys(_ref) {
  var id = _ref.id,
      _ref$shortcut = _ref.shortcut,
      shortcut = _ref$shortcut === void 0 ? [] : _ref$shortcut;

  if (id in KEYBOARD_SHORTCUTS && !(shortcut !== null && shortcut !== void 0 && shortcut.length)) {
    var _id = id;
    return prettifyShortcut(KEYBOARD_SHORTCUTS[_id]);
  }

  return prettifyShortcut(shortcut);
}

var ResultCommand = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: ", ";\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n  height: 30px;\n"])), function (p) {
  return p.active ? 'lightsteelblue' : 'transparent';
});
var ResultSectionHeader = styled(Text)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  background-color: white;\n  color: gray;\n  margin: 0 2rem;\n  padding: 0.5rem 0;\n  font-size: small;\n  font-weight: bold;\n  font-family: ", ";\n"])), SYSTEM_FONT);
var ResultShortcut = styled.span(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n  display: flex;\n  gap: 5px;\n"])));
var ResultShortcutKey = styled.kbd(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #eee;\n  border-radius: 5px;\n  border: 1px solid #b4b4b4;\n  padding: 5px 10px;\n  min-width: 20px;\n  height: 25px;\n  white-space: nowrap;\n  font-family: ", ";\n"])), SYSTEM_FONT);

function onRender(_ref2) {
  var item = _ref2.item,
      active = _ref2.active;

  if (typeof item === 'string') {
    return /*#__PURE__*/_jsx(ResultSectionHeader, {
      children: item
    });
  } else {
    return /*#__PURE__*/_jsxs(ResultCommand, {
      active: active,
      children: [/*#__PURE__*/_jsx(Text, {
        fontFamily: SYSTEM_FONT,
        children: item.name
      }), /*#__PURE__*/_jsx(ResultShortcut, {
        children: getShortcutKeys(item).map(function (key) {
          return key && /*#__PURE__*/_jsx(ResultShortcutKey, {
            children: key
          }, "".concat(item.id, "-").concat(key));
        })
      })]
    });
  }
}

var CommandBarResults = function CommandBarResults() {
  var _useMatches = useMatches(),
      results = _useMatches.results;

  return /*#__PURE__*/_jsx(KBarResults, {
    items: results,
    onRender: onRender
  });
};

export default CommandBarResults;