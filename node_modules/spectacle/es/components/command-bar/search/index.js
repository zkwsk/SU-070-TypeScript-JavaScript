var _templateObject, _templateObject2;

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import styled from 'styled-components';
import { KBarPortal, KBarPositioner, KBarAnimator, KBarSearch } from 'kbar';
import CommandBarResults from '../results';
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
var KBarSearchStyled = styled(KBarSearch)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  padding: 12px 16px;\n  font-size: 16px;\n  width: 100%;\n  box-sizing: border-box;\n  outline: none;\n  border: none;\n"])));
var KBarAnimatorStyled = styled(KBarAnimator)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  max-width: 600px;\n  width: 100%;\n  background: white;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: rgb(0 0 0 / 50%) 0px 16px 70px;\n"])));

var CommandBarSearch = function CommandBarSearch() {
  return /*#__PURE__*/_jsx(KBarPortal, {
    children: /*#__PURE__*/_jsx(KBarPositioner, {
      children: /*#__PURE__*/_jsxs(KBarAnimatorStyled, {
        children: [/*#__PURE__*/_jsx(KBarSearchStyled, {}), /*#__PURE__*/_jsx(CommandBarResults, {})]
      })
    })
  });
};

export default CommandBarSearch;