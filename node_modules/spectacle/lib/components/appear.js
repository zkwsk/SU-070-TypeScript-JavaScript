"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Appear = Appear;
exports.Stepper = Stepper;

var React = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactSpring = require("react-spring");

var _useSteps2 = require("../hooks/use-steps");

var _slide = require("./slide/slide");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function SteppedComponent(_ref) {
  var id = _ref.id,
      className = _ref.className,
      childrenOrRenderFunction = _ref.children,
      _ref$tagName = _ref.tagName,
      tagName = _ref$tagName === void 0 ? 'div' : _ref$tagName,
      priority = _ref.priority,
      stepIndex = _ref.stepIndex,
      _ref$numSteps = _ref.numSteps,
      numSteps = _ref$numSteps === void 0 ? 1 : _ref$numSteps,
      _ref$alwaysAppearActi = _ref.alwaysAppearActive,
      alwaysAppearActive = _ref$alwaysAppearActi === void 0 ? false : _ref$alwaysAppearActi,
      _ref$activeStyle = _ref.activeStyle,
      activeStyle = _ref$activeStyle === void 0 ? {
    opacity: '1'
  } : _ref$activeStyle,
      _ref$inactiveStyle = _ref.inactiveStyle,
      inactiveStyle = _ref$inactiveStyle === void 0 ? {
    opacity: '0'
  } : _ref$inactiveStyle;

  var _React$useContext = React.useContext(_slide.SlideContext),
      immediate = _React$useContext.immediate;

  var _useSteps = (0, _useSteps2.useSteps)(numSteps, {
    id: id,
    priority: priority,
    stepIndex: stepIndex
  }),
      isActive = _useSteps.isActive,
      step = _useSteps.step,
      placeholder = _useSteps.placeholder;

  var AnimatedEl = _reactSpring.animated[tagName];
  var children;

  if (typeof childrenOrRenderFunction === 'function') {
    children = childrenOrRenderFunction(step, isActive);
  } else {
    children = childrenOrRenderFunction;
  }

  var springStyle = (0, _reactSpring.useSpring)({
    to: isActive ? activeStyle : inactiveStyle,
    immediate: immediate
  });
  return /*#__PURE__*/React.createElement(React.Fragment, null, placeholder, /*#__PURE__*/React.createElement(AnimatedEl, {
    style: alwaysAppearActive ? activeStyle : springStyle,
    className: className
  }, children));
}

SteppedComponent.propTypes = {
  id: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  className: _propTypes.default.string,
  children: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.node]),
  tagName: _propTypes.default.string,
  priority: _propTypes.default.number,
  stepIndex: _propTypes.default.number,
  numSteps: _propTypes.default.number,
  alwaysAppearActive: _propTypes.default.bool,
  activeStyle: _propTypes.default.object,
  inactiveStyle: _propTypes.default.object
};

function Appear(_ref2) {
  var children = _ref2.children,
      restProps = _objectWithoutProperties(_ref2, ["children"]);

  return /*#__PURE__*/React.createElement(SteppedComponent, _extends({}, restProps, {
    numSteps: 1
  }), children);
}

Appear.propTypes = {
  id: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  priority: _propTypes.default.number,
  stepIndex: _propTypes.default.number,
  children: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.node]),
  className: _propTypes.default.string,
  tagName: _propTypes.default.string,
  activeStyle: _propTypes.default.object,
  inactiveStyle: _propTypes.default.object
};

function Stepper(_ref3) {
  var values = _ref3.values,
      renderFn = _ref3.render,
      renderChildrenFn = _ref3.children,
      _ref3$alwaysVisible = _ref3.alwaysVisible,
      alwaysVisible = _ref3$alwaysVisible === void 0 ? false : _ref3$alwaysVisible,
      activeStyle = _ref3.activeStyle,
      inactiveStyle = _ref3.inactiveStyle,
      restProps = _objectWithoutProperties(_ref3, ["values", "render", "children", "alwaysVisible", "activeStyle", "inactiveStyle"]);

  if (renderFn !== undefined && renderChildrenFn !== undefined) {
    throw new Error('<Stepper> component specified both `render` prop and a render function as its `children`.');
  }

  return /*#__PURE__*/React.createElement(SteppedComponent, _extends({}, restProps, {
    numSteps: values.length,
    alwaysAppearActive: alwaysVisible
  }), function (step, isActive) {
    return (renderFn || renderChildrenFn)(values[step], step, isActive);
  });
}

Stepper.propTypes = {
  id: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  priority: _propTypes.default.number,
  stepIndex: _propTypes.default.number,
  render: _propTypes.default.func,
  children: _propTypes.default.func,
  className: _propTypes.default.string,
  tagName: _propTypes.default.string,
  values: _propTypes.default.arrayOf(_propTypes.default.any).isRequired,
  alwaysVisible: _propTypes.default.bool,
  activeStyle: _propTypes.default.object,
  inactiveStyle: _propTypes.default.object
};